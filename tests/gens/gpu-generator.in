#!/bin/bash

if [ x@cuda@ = xyes ];
then

common_includes="\
-I@abs_top_builddir@ \
-I@abs_top_srcdir@/src/core \
-I@abs_top_srcdir@/src/apis/c \
-I@abs_top_builddir@/src/apis/c \
$END"

VERSIONS="@VERSIONS@"
PLUGINS="@PLUGINS@"

LIBS="-lnanox-ompss -lnanox -lnanox-c -lnanox-gpu-api @cudalibs@"

@is_debug_enabled_TRUE@ debug_CPPFLAGS="@debug_CPPFLAGS@ @cc_dep_CPPFLAGS@ ${common_includes} @cudainc@ @CPPFLAGS@"
@is_debug_enabled_TRUE@ debug_CXXFLAGS="@debug_CXXFLAGS@ @CXXFLAGS@"
@is_debug_enabled_TRUE@ debug_LDFLAGS="@cudalib@ @LDFLAGS@"
@is_debug_enabled_TRUE@ debug_LIBS=${LIBS}
@is_debug_enabled_TRUE@ debug_PLUGINS=

@is_instrumentation_enabled_TRUE@ instrumentation_CPPFLAGS="@instrumentation_CPPFLAGS@ @cc_dep_CPPFLAGS@ ${common_includes} @cudainc@ @CPPFLAGS@"
@is_instrumentation_enabled_TRUE@ instrumentation_CXXFLAGS="@instrumentation_CXXFLAGS@ @CXXFLAGS@"
@is_instrumentation_enabled_TRUE@ instrumentation_LDFLAGS="@cudalib@ @LDFLAGS@"
@is_instrumentation_enabled_TRUE@ instrumentation_LIBS=${LIBS}
@is_instrumentation_enabled_TRUE@ instrumentation_PLUGINS=

@is_instrumentation_debug_enabled_TRUE@ instrumentation_debug_CPPFLAGS="@instrumentation_debug_CPPFLAGS@ @cc_dep_CPPFLAGS@ ${common_includes} @cudainc@ @CPPFLAGS@"
@is_instrumentation_debug_enabled_TRUE@ instrumentation_debug_CXXFLAGS="@instrumentation_debug_CXXFLAGS@ @CXXFLAGS@"
@is_instrumentation_debug_enabled_TRUE@ instrumentation_debug_LDFLAGS="@cudalib@ @LDFLAGS@"
@is_instrumentation_debug_enabled_TRUE@ instrumentation_debug_LIBS=${LIBS}
@is_instrumentation_debug_enabled_TRUE@ instrumentation_debug_PLUGINS=

@is_performance_enabled_TRUE@ performance_CPPFLAGS="@performance_CPPFLAGS@ @cc_dep_CPPFLAGS@ ${common_includes} @cudainc@ @CPPFLAGS@"
@is_performance_enabled_TRUE@ performance_CXXFLAGS="@performance_CXXFLAGS@ @CXXFLAGS@"
@is_performance_enabled_TRUE@ performance_LDFLAGS="@cudalib@ @LDFLAGS@"
@is_performance_enabled_TRUE@ performance_LIBS=${LIBS}
@is_performance_enabled_TRUE@ performance_PLUGINS=

# Common to all versions
cat << EOF
test_CC=@cuda_prefix@/bin/nvcc
test_CXX=@cuda_prefix@/bin/nvcc
EOF

# Specific to each version
compile_versions=
for version in $VERSIONS; do
  sh_version=$(tr_sh $version)
  compile_versions+="${sh_version} "
  for plugin in $PLUGINS; do
    eval ${sh_version}_PLUGINS+="':@abs_top_builddir@/src/$plugin/$version/.libs'"
  done

  eval ${sh_version}_ENV=$(eval echo \'LD_LIBRARY_PATH=\
@abs_top_builddir@/src/core/$version/.libs:\
@abs_top_builddir@/src/apis/$version/.libs:\
@abs_top_builddir@/src/pms/$version/.libs:\
\${${sh_version}_PLUGINS}:$LD_LIBRARY_PATH\')

  eval ${sh_version}_LDFLAGS="\"\
-L @abs_top_builddir@/src/pms/${version}/.libs  -Wl,-rpath,@abs_top_builddir@/src/pms/${version}/.libs \
-L @abs_top_builddir@/src/core/${version}/.libs -Wl,-rpath,@abs_top_builddir@/src/core/${version}/.libs \
-L @abs_top_builddir@/src/apis/${version}/.libs -Wl,-rpath,@abs_top_builddir@/src/apis/${version}/.libs \
-L @abs_top_builddir@/src/arch/gpu/${version}/.libs -Wl,-rpath,@abs_top_builddir@/src/arch/gpu/${version}/.libs \
@PTHREAD_LIBS@ \
\${${sh_version}_LIBS} \
\${${sh_version}_LDFLAGS}\""

# Prepend each preprocessor and compiler flag with -Xcompiler
# Same for linker flags with -Xlinker
cat << EOF
test_CPPFLAGS_${sh_version}="$(eval echo \${${sh_version}_CPPFLAGS} | sed 's/^\|[ ]/ -xcompiler /g')"
test_CXXFLAGS_${sh_version}="$(eval echo \${${sh_version}_CXXFLAGS} | sed 's/^\|[ ]/ -xcompiler /g')"
test_LDFLAGS_${sh_version}="$(eval echo \${${sh_version}_LDFLAGS} \${${sh_version}_LIBS} | sed 's/^\|[ ]/ -xlinker /g')"
test_ENV_${sh_version}="$(eval echo \${${sh_version}_ENV})"

compile_versions="${compile_versions}"

$(@abs_top_srcdir@/tests/gens/config.py $*)
EOF

done # for version 

else
cat << EOF
test_ignore=yes
EOF

fi
